.terminal-header {
  position: relative;
}

.terminal-header::before {
  content: "";
  position: absolute;
  left: -10px;
  top: 50%;
  transform: translateY(-50%);
  width: 4px;
  height: 4px;
  background-color: #4ade80;
  border-radius: 50%;
  animation: blink 1.5s infinite;
}

.typing-animation {
  overflow: hidden;
  border-right: 2px solid rgba(74, 222, 128, 0.75);
  white-space: nowrap;
  animation: typing 4s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: rgba(74, 222, 128, 0.75) }
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.2; }
}

.glitch-container {
  position: relative;
}

.glitch-text {
  position: relative;
  display: inline-block;
}

.glitch-text::before,
.glitch-text::after {
  content: "HUMAN · MEMORY · MACHINE";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  left: 2px;
  text-shadow: -1px 0 rgba(255, 0, 0, 0.7);
  animation: glitch-animation 3s infinite linear alternate-reverse;
}

.glitch-text::after {
  left: -2px;
  text-shadow: 1px 0 rgba(0, 0, 255, 0.7);
  animation: glitch-animation 2s infinite linear alternate-reverse;
}

@keyframes glitch-animation {
  0% {
    clip-path: inset(40% 0 61% 0);
  }
  20% {
    clip-path: inset(92% 0 1% 0);
  }
  40% {
    clip-path: inset(43% 0 1% 0);
  }
  60% {
    clip-path: inset(25% 0 58% 0);
  }
  80% {
    clip-path: inset(54% 0 7% 0);
  }
  100% {
    clip-path: inset(58% 0 43% 0);
  }
}

.glitch-overlay {
  background: rgba(0, 0, 0, 0.1);
  animation: glitch-overlay 1s linear;
}

@keyframes glitch-overlay {
  0% { 
    transform: translate(0);
    background-position: 0 0;
  }
  20% { 
    transform: translate(-5px, 5px);
    background-position: -5px 5px;
  }
  40% { 
    transform: translate(5px, -5px);
    background-position: 5px -5px;
  }
  60% { 
    transform: translate(5px, 5px);
    background-position: 5px 5px;
  }
  80% { 
    transform: translate(-5px, -5px);
    background-position: -5px -5px;
  }
  100% { 
    transform: translate(0);
    background-position: 0 0;
  }
}

.artwork-pulse {
  animation: pulse 1s ease-in-out;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

.matrix-effect {
  position: relative;
  overflow: hidden;
  background-color: rgba(0, 0, 0, 0.95);
}

.matrix-effect::before {
  content: "";
  position: absolute;
  top: -100%;
  left: 0;
  width: 100%;
  height: 300%;
  background: linear-gradient(0deg, 
    rgba(32, 194, 14, 0) 0%, 
    rgba(32, 194, 14, 0.2) 50%, 
    rgba(32, 194, 14, 0) 100%);
  animation: matrix-rain 2s linear infinite;
}

@keyframes matrix-rain {
  0% { transform: translateY(0); }
  100% { transform: translateY(33.33%); }
}

/* Hide scrollbar for a cleaner look */
.terminal-output::-webkit-scrollbar {
  width: 4px;
}

.terminal-output::-webkit-scrollbar-track {
  background: #111;
}

.terminal-output::-webkit-scrollbar-thumb {
  background: #333;
}

/* Hexagonal grid layout */
.hexagon-grid-container {
  transform: translateZ(0);
  z-index: 1;
}

.hexagon-grid {
  display: grid;
  grid-template-columns: repeat(3, 80px);
  grid-template-rows: repeat(2, 80px);
  grid-gap: 15px;
  position: relative;
}

.hexagon-item {
  position: relative;
  width: 80px;
  height: 80px;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  background-color: rgba(40, 40, 40, 0.7);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(2px);
  border: 1px solid rgba(150, 150, 150, 0.2);
}

.hexagon-item:hover {
  background-color: rgba(70, 70, 70, 0.8);
  transform: scale(1.05);
  border-color: rgba(74, 222, 128, 0.5);
}

.hexagon-content {
  color: rgba(230, 230, 230, 0.9);
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 1px;
  text-align: center;
}

.hexagon-label {
  color: rgba(200, 200, 200, 0.7);
  font-size: 10px;
  margin-top: 5px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

/* Add scanlines effect similar to NieR UI */
.hexagon-item::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    rgba(255, 255, 255, 0.03) 50%,
    rgba(0, 0, 0, 0.03) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
}

/* Glowing effect for image */
.glow-effect {
  position: relative;
}

.glow-effect::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: rgba(74, 222, 128, 0.3);
  border-radius: 50%;
  z-index: -1;
  filter: blur(8px);
  opacity: 0;
  transition: opacity 0.3s;
}

.glow-effect:hover::after {
  opacity: 1;
}

/* Loading screen and boot sequence styles */
.loading-container {
  font-family: monospace;
}

.loading-title {
  letter-spacing: 1px;
  position: relative;
}

.terminal-like-boot {
  font-family: monospace;
  color: #9ca3af;
  position: relative;
  overflow: auto;
}

.boot-text {
  margin-bottom: 8px;
  position: relative;
  padding-left: 20px;
}

.boot-text::before {
  content: ">";
  position: absolute;
  left: 0;
  color: #4ade80;
}

.boot-text.typing::after {
  content: "_";
  animation: blink 1s infinite;
}

.glitch-text-subtle {
  position: relative;
  display: inline-block;
}

.glitch-text-subtle::before,
.glitch-text-subtle::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.2;
}

.glitch-text-subtle::before {
  left: 2px;
  text-shadow: -1px 0 #ff0000;
  animation: glitch-animation-subtle 2s infinite linear alternate-reverse;
}

.glitch-text-subtle::after {
  left: -2px;
  text-shadow: 1px 0 #00ffff;
  animation: glitch-animation-subtle 3s infinite linear alternate-reverse;
}

@keyframes glitch-animation-subtle {
  0% {
    clip-path: inset(40% 0 61% 0);
  }
  100% {
    clip-path: inset(30% 0 85% 0);
  }
}

/* Home page NieR-inspired styles */
.grid-pattern {
  background-image: 
    linear-gradient(rgba(0, 0, 0, 0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
  background-size: 30px 30px;
  opacity: 0.2;
}

.main-title-glitch {
  position: relative;
  display: inline-block;
  color: white;
}

.main-title-glitch span {
  position: relative;
  z-index: 2;
}

.main-title-glitch span::before,
.main-title-glitch span::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

.main-title-glitch span::before {
  color: #ff0000;
  animation: glitch-anim-1 3s infinite linear alternate-reverse;
}

.main-title-glitch span::after {
  color: #00ffff;
  animation: glitch-anim-2 2.5s infinite linear alternate-reverse;
}

@keyframes glitch-anim-1 {
  0% {
    clip-path: inset(42% 0 58% 0);
    transform: translate(0);
  }
  20% {
    clip-path: inset(95% 0 4% 0);
    transform: translate(-2px, 1px);
  }
  40% {
    clip-path: inset(6% 0 93% 0);
    transform: translate(1px, -1px);
  }
  60% {
    clip-path: inset(41% 0 52% 0);
    transform: translate(1px, 1px);
  }
  80% {
    clip-path: inset(13% 0 86% 0);
    transform: translate(-1px, -1px);
  }
  100% {
    clip-path: inset(59% 0 34% 0);
    transform: translate(-2px, 0);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip-path: inset(50% 0 49% 0);
    transform: translate(0);
  }
  20% {
    clip-path: inset(13% 0 86% 0);
    transform: translate(2px, -1px);
  }
  40% {
    clip-path: inset(73% 0 26% 0);
    transform: translate(-1px, 1px);
  }
  60% {
    clip-path: inset(22% 0 77% 0);
    transform: translate(-1px, -1px);
  }
  80% {
    clip-path: inset(66% 0 33% 0);
    transform: translate(1px, 1px);
  }
  100% {
    clip-path: inset(8% 0 91% 0);
    transform: translate(2px, 0);
  }
}

.glitch-slice-container {
  overflow: hidden;
}

.glitch-slice {
  position: absolute;
  width: 100%;
  background: rgba(255, 255, 255, 0.2);
  animation: glitch-slice 6s infinite;
}

@keyframes glitch-slice {
  0%, 90%, 100% {
    transform: translateX(0);
    opacity: 0;
  }
  10%, 30%, 50%, 70% {
    transform: translateX(-10px);
    opacity: 0.2;
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
    opacity: 0.4;
  }
}

.digital-noise {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.05'/%3E%3C/svg%3E");
  background-size: 200px;
  opacity: 0.05;
  z-index: 1;
  animation: noise-animation 0.5s infinite;
}

@keyframes noise-animation {
  0% { opacity: 0.05; }
  50% { opacity: 0.03; }
  100% { opacity: 0.05; }
}

/* Artwork hexagon grid layout */
.artwork-hexagon-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 1fr;
  grid-gap: 30px;
  max-width: 900px;
  margin: 0 auto;
  padding: 20px;
}

.artwork-hexagon {
  position: relative;
  overflow: hidden;
  width: 100%;
  padding-top: 115%; /* Maintain aspect ratio */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  background-color: rgba(60, 60, 60, 0.7);
  transition: all 0.3s ease;
  border: 1px solid rgba(150, 150, 150, 0.2);
}

.artwork-hexagon:hover {
  transform: scale(1.05);
  border-color: rgba(74, 222, 128, 0.5);
  z-index: 1;
}

.artwork-hexagon-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.artwork-hexagon-content img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease, filter 0.5s ease;
}

.artwork-hexagon:hover img {
  transform: scale(1.1);
  filter: brightness(0.7);
}

.artwork-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 20px;
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.artwork-hexagon:hover .artwork-overlay {
  opacity: 1;
}

.secret-project {
  border: 2px solid rgba(74, 222, 128, 0.5);
  position: relative;
}

.secret-project::after {
  content: "SECRET";
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 10px;
  background: rgba(0, 0, 0, 0.7);
  color: rgb(74, 222, 128);
  padding: 2px 6px;
  border-radius: 2px;
  z-index: 2;
}

.artwork-hexagon.locked {
  background: rgba(40, 40, 40, 0.5);
  border: 1px dashed rgba(150, 150, 150, 0.3);
}

/* Add scanlines effect to artwork hexagons */
.artwork-hexagon::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    rgba(255, 255, 255, 0.03) 50%,
    rgba(0, 0, 0, 0.03) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 1;
}

/* Responsive adjustments for hexagon grid */
@media (max-width: 768px) {
  .artwork-hexagon-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 480px) {
  .artwork-hexagon-grid {
    grid-template-columns: 1fr;
  }
}

/* Scanlines effect for text */
.scanlines-text {
  position: relative;
  display: inline-block;
}

.scanlines-text::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    rgba(255, 255, 255, 0.05) 50%,
    transparent 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 1;
}

/* NieR-inspired buttons with hover effects */
button.nier-style {
  background-color: rgba(40, 40, 40, 0.7);
  border: 1px solid rgba(150, 150, 150, 0.3);
  color: #f0f0f0;
  padding: 0.5rem 1rem;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

button.nier-style:hover {
  background-color: rgba(70, 70, 70, 0.7);
  border-color: rgba(74, 222, 128, 0.5);
}

button.nier-style::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    rgba(255, 255, 255, 0.05) 50%,
    transparent 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 1;
}

/* Custom scrollbar for the entire page */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(30, 30, 30, 0.5);
}

::-webkit-scrollbar-thumb {
  background: rgba(100, 100, 100, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(150, 150, 150, 0.5);
}

/* Terminal blinking cursor */
.terminal-cursor {
  display: inline-block;
  width: 8px;
  height: 15px;
  background-color: #4ade80;
  animation: terminal-blink 1s infinite;
  vertical-align: middle;
  margin-left: 2px;
}

@keyframes terminal-blink {
  0%, 49% { opacity: 1; }
  50%, 100% { opacity: 0; }
}